{"version":3,"sources":["services/userAPI.js","services/favoriteSongsAPI.js","components/Loading.js","pages/Login.js","components/Header.js","services/searchAlbumsAPI.js","pages/Search.js","services/musicsAPI.js","components/MusicCard.js","pages/Album.js","pages/Favorites.js","pages/Profile.js","pages/ProfileEdit.js","pages/NotFound.js","App.js","index.js"],"names":["USER_KEY","saveUser","user","localStorage","setItem","JSON","stringify","simulateRequest","response","callback","setTimeout","getUser","Promise","resolve","parse","getItem","createUser","name","email","image","description","updateUser","updatedUser","FAVORITE_SONGS_KEY","readFavoriteSongs","saveFavoriteSongs","favoriteSongs","getFavoriteSongs","addSong","song","removeSong","filter","s","trackId","Loading","className","React","Component","userAPI","require","Login","handleChange","value","target","currLength","length","setState","disabled","handleClick","a","state","mounted","clicked","saved","this","isLoading","isSaved","type","placeholder","onChange","onClick","to","Header","src","alt","searchAlbumsAPI","artist","artistNameURL","encodeURI","replaceAll","getAlbumsAPI","fetch","APIResponse","json","results","map","artistId","artistName","collectionId","collectionName","collectionPrice","artworkUrl100","releaseDate","trackCount","Search","loading","searched","album","albums","requested","showInput","getMusics","id","request","requestJson","MusicCard","music","props","trackName","previewUrl","controls","kind","favoriteSogsAPI","Album","getStorage","favorites","getAlbum","match","params","musics","handleCheckboxChange","checked","saveSong","favorite","deleteSong","newList","index","htmlFor","e","some","Favorites","Profile","fetchUser","ProfileEdit","verifyForm","prevSt","disable","isEmpty","item","isEmailValid","checkEmail","preventDefault","NotFound","App","path","component","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e17fc536.chunk.js","sourcesContent":["const USER_KEY = 'user';\nconst TIMEOUT = 1500;\nconst SUCCESS_STATUS = 'OK';\n\nconst readUser = () => JSON.parse(localStorage.getItem(USER_KEY));\nconst saveUser = (user) => localStorage.setItem(USER_KEY, JSON.stringify(user));\n\n// --------------------------------------------------------------------\n// A função simulateRequest simula uma requisição para uma API externa\n// Esse tipo de função que \"chama outra função\" é chamada de\n// \"currying function\" https://javascript.info/currying-partials\n// não se preocupe, estudaremos isso mais futuramente\n// --------------------------------------------------------------------\n\nconst simulateRequest = (response) => (callback) => {\n  setTimeout(() => {\n    callback(response);\n  }, TIMEOUT);\n};\n\nexport const getUser = () => new Promise((resolve) => {\n  let user = readUser();\n  if (user === null) {\n    user = {};\n  }\n  simulateRequest(user)(resolve);\n});\n\nexport const createUser = (user) => new Promise((resolve) => {\n  const emptyUser = {\n    name: '',\n    email: '',\n    image: '',\n    description: '',\n  };\n  saveUser({ ...emptyUser, ...user });\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n\nexport const updateUser = (updatedUser) => new Promise((resolve) => {\n  saveUser({ ...updatedUser });\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n","const FAVORITE_SONGS_KEY = 'favorite_songs';\nconst TIMEOUT = 500;\nconst SUCCESS_STATUS = 'OK';\n\nif (!JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY))) {\n  localStorage.setItem(FAVORITE_SONGS_KEY, JSON.stringify([]));\n}\nconst readFavoriteSongs = () => JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY));\n\nconst saveFavoriteSongs = (favoriteSongs) => localStorage\n  .setItem(FAVORITE_SONGS_KEY, JSON.stringify(favoriteSongs));\n\n// --------------------------------------------------------------------\n// A função simulateRequest simula uma requisição para uma API externa\n// Esse tipo de função que \"chama outra função\" é chamada de\n// \"currying function\" https://javascript.info/currying-partials\n// não se preocupe, estudaremos isso futuramente.\n// --------------------------------------------------------------------\n\nconst simulateRequest = (response) => (callback) => {\n  setTimeout(() => {\n    callback(response);\n  }, TIMEOUT);\n};\n\nexport const getFavoriteSongs = () => new Promise((resolve) => {\n  const favoriteSongs = readFavoriteSongs();\n  simulateRequest(favoriteSongs)(resolve);\n});\n\nexport const addSong = (song) => new Promise((resolve) => {\n  if (song) {\n    const favoriteSongs = readFavoriteSongs();\n    saveFavoriteSongs([...favoriteSongs, song]);\n  }\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n\nexport const removeSong = (song) => new Promise((resolve) => {\n  const favoriteSongs = readFavoriteSongs();\n  saveFavoriteSongs(favoriteSongs.filter((s) => s.trackId !== song.trackId));\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n","import React from 'react';\nimport '../styles/Loading.css';\n\nclass Loading extends React.Component {\n  render() {\n    return (\n      <section className=\"load-sect\">\n        <h1 className=\"load-text\">Carregando...</h1>\n        <div className=\"loading\" />\n      </section>\n    );\n  }\n}\n\nexport default Loading;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Loading from '../components/Loading';\nimport '../styles/Login.css';\n\nconst userAPI = require('../services/userAPI');\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      name: '',\n      saved: false,\n      disabled: true,\n      clicked: false,\n      mounted: false,\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ mounted: true });\n  }\n\n  componentWillUnmount() {\n    this.setState({ mounted: false });\n  }\n\n  handleChange = ({ target: { value } }) => {\n    const currLength = value.length;\n    const minLength = 3;\n    this.setState({ name: value,\n      disabled: currLength < minLength });\n  }\n\n  handleClick = async () => {\n    const { name, mounted } = this.state;\n    if (mounted) {\n      this.setState({ clicked: true });\n      await userAPI.createUser({ name });\n      this.setState({ saved: true });\n    }\n  }\n\n  render() {\n    const { name, saved, disabled, clicked } = this.state;\n    const isLoading = clicked && !saved;\n    const isSaved = clicked && saved;\n    return (\n      <>\n        {isLoading ? <Loading /> : (\n          <div className=\"page-login\" data-testid=\"page-login\">\n            <h1 className=\"login-title\">Login</h1>\n            <form>\n              <input\n                className=\"input\"\n                type=\"text\"\n                placeholder=\"Nome\"\n                data-testid=\"login-name-input\"\n                value={ name }\n                onChange={ this.handleChange }\n              />\n              <button\n                className=\"btn-invert\"\n                type=\"button\"\n                data-testid=\"login-submit-button\"\n                onClick={ this.handleClick }\n                disabled={ disabled }\n              >\n                Entrar\n              </button>\n            </form>\n          </div>\n        )}\n        {isSaved && <Redirect to=\"/project-trybe-tunes/search\" />}\n      </>\n    );\n  }\n}\n\nexport default Login;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Loading from './Loading';\nimport '../styles/Header.css';\n\nconst userAPI = require('../services/userAPI');\n\nclass Header extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      user: '',\n    };\n  }\n\n  componentDidMount() {\n    this.getUser();\n  }\n\n  getUser = async () => {\n    this.setState({ user: await userAPI.getUser() });\n  }\n\n  render() {\n    const { user } = this.state;\n    return (\n      <header className=\"header\" data-testid=\"header-component\">\n        {!user ? <Loading /> : (\n          <>\n            <section className=\"flex-container-h\">\n              <img className=\"logo\" src=\"https://www.pngitem.com/pimgs/m/116-1163025_music-icon-png-free-download-desenho-de-notas.png\" alt=\"Music symbol\" />\n              <section className=\"user-sect flex-container-h\">\n                <img className=\"user-img\" src={ user.image || 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQQZj7Bw_2d3u3gfWIrySXIloU1J1LsU9sdt6WUuWT-XZFxMBbqhibD2bM3zhMXc639XhQ&usqp=CAU' } alt=\"User silhouette\" />\n                <h1 className=\"user-title\" data-testid=\"header-user-name\">{user.name}</h1>\n              </section>\n            </section>\n            <nav className=\"nav-links flex-container-h\">\n              <Link\n                className=\"link\"\n                data-testid=\"link-to-search\"\n                to=\"/search\"\n              >\n                Search\n              </Link>\n              <Link\n                className=\"link\"\n                data-testid=\"link-to-favorites\"\n                to=\"/favorites\"\n              >\n                Favorites\n              </Link>\n              <Link\n                className=\"link\"\n                data-testid=\"link-to-profile\"\n                to=\"/profile\"\n              >\n                Profile\n              </Link>\n            </nav>\n          </>\n        )}\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","const searchAlbumsAPI = async (artist) => {\n  const artistNameURL = encodeURI(artist).replaceAll('%20', '+');\n\n  const getAlbumsAPI = `https://itunes.apple.com/search?entity=album&term=${artistNameURL}&attribute=allArtistTerm`;\n\n  const APIResponse = await fetch(getAlbumsAPI);\n\n  const { results } = await APIResponse.json();\n\n  const response = results.map(\n    ({\n      artistId,\n      artistName,\n      collectionId,\n      collectionName,\n      collectionPrice,\n      artworkUrl100,\n      releaseDate,\n      trackCount,\n    }) => ({\n      artistId,\n      artistName,\n      collectionId,\n      collectionName,\n      collectionPrice,\n      artworkUrl100,\n      releaseDate,\n      trackCount,\n    }),\n  );\n  return response;\n};\n\nexport default searchAlbumsAPI;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Loading from '../components/Loading';\nimport searchAlbumsAPI from '../services/searchAlbumsAPI';\nimport '../styles/Search.css';\n\nclass Search extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      artist: '',\n      searched: '',\n      disabled: true,\n      mounted: false,\n      loading: false,\n      albums: [],\n      requested: false,\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ mounted: true });\n  }\n\n  componentWillUnmount() {\n    this.setState({ mounted: false });\n  }\n\n  handleChange = ({ target: { value } }) => {\n    const currLength = value.length;\n    const minLength = 2;\n    this.setState({\n      artist: value,\n      disabled: currLength < minLength,\n    });\n  }\n\n  handleClick = async () => {\n    const { mounted, artist } = this.state;\n    this.setState({ artist: '', loading: true, searched: artist });\n    if (mounted) {\n      const album = await searchAlbumsAPI(artist);\n      this.setState({ loading: false, albums: album, requested: true });\n    }\n  }\n\n  render() {\n    const { searched, artist, disabled, loading, albums, requested } = this.state;\n    const showInput = !loading && !requested;\n    return (\n      <div className=\"page-search\" data-testid=\"page-search\">\n        <Header />\n        <section className=\"search-sect\">\n          <input\n            className=\"input\"\n            type=\"text\"\n            data-testid=\"search-artist-input\"\n            placeholder=\"Nome do artista\"\n            value={ artist }\n            onChange={ this.handleChange }\n          />\n          <button\n            className=\"button\"\n            type=\"button\"\n            data-testid=\"search-artist-button\"\n            disabled={ disabled }\n            onClick={ this.handleClick }\n          >\n            Pesquisar\n          </button>\n        </section>\n        {loading && <Loading />}\n        {!loading && albums.length === 0\n        && !showInput && <h2 className=\"title-music\">Nenhum álbum foi encontrado</h2>}\n        {!loading && albums.length !== 0 && !showInput && (\n          <>\n            <h2 className=\"title-music\">{`Resultado de álbuns de: ${searched}`}</h2>\n            <ul className=\"cards-sect\">\n              {albums.map((album) => (\n                <li key={ album.collectionId } className=\"music-card\">\n                  <Link\n                    className=\"link-music\"\n                    to={ `/album/${album.collectionId}` }\n                    data-testid={ `link-to-album-${album.collectionId}` }\n                  >\n                    <img\n                      className=\"music-img\"\n                      src={ album.artworkUrl100 }\n                      alt={ `${album.collectionName} - ${album.artistName}` }\n                    />\n                    <h3 className=\"music-album\">{ album.collectionName }</h3>\n                    <p className=\"music-singer\">{ album.artistName }</p>\n                  </Link>\n                </li>\n              ))}\n            </ul>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Search;\n","const getMusics = async (id) => {\n  const request = await fetch(`https://itunes.apple.com/lookup?id=${id}&entity=song`);\n  const requestJson = await request.json();\n  return requestJson.results;\n};\n\nexport default getMusics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../styles/MusicCard.css';\n\nclass MusicCard extends React.Component {\n  render() {\n    const { music } = this.props;\n    return (\n      <section className=\"track-sect\">\n        <p className=\"track-name\">{music.trackName}</p>\n        <audio\n          className=\"audio\"\n          data-testid=\"audio-component\"\n          src={ music.previewUrl }\n          controls\n        >\n          <track kind=\"captions\" />\n        </audio>\n      </section>\n    );\n  }\n}\n\nMusicCard.propTypes = {\n  music: PropTypes.shape({\n    trackName: PropTypes.string,\n    previewUrl: PropTypes.string,\n    trackId: PropTypes.number,\n  }).isRequired,\n};\n\nexport default MusicCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport getMusics from '../services/musicsAPI';\nimport MusicCard from '../components/MusicCard';\nimport Loading from '../components/Loading';\nimport '../styles/Album.css';\n\nconst favoriteSogsAPI = require('../services/favoriteSongsAPI');\n\nclass Album extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      musics: [],\n      mounted: false,\n      artist: '',\n      album: '',\n      loading: true,\n      favorites: [],\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ mounted: true }, () => {\n      this.getAlbum();\n      this.getStorage();\n    });\n  }\n\n  componentWillUnmount() {\n    this.setState({ mounted: false });\n  }\n\n  getStorage = async () => {\n    const favorites = await favoriteSogsAPI.getFavoriteSongs();\n    this.setState({ favorites });\n  }\n\n  getAlbum = async () => {\n    const { mounted } = this.state;\n    const { match: { params: { id } } } = this.props;\n    if (mounted) {\n      const musics = await getMusics(id);\n      this.setState({ musics,\n        album: musics[0].collectionName,\n        artist: musics[0].artistName,\n        image: musics[0].artworkUrl100,\n        loading: false });\n    }\n  }\n\n  handleCheckboxChange = ({ target }, music) => {\n    this.setState({ loading: true });\n    const { favorites } = this.state;\n    const { checked } = target;\n    if (checked) {\n      this.setState({ favorites: [...favorites, music] });\n      this.saveSong(music);\n    } else {\n      this.setState({\n        favorites: favorites\n          .filter((favorite) => favorite.trackId !== music.trackId) });\n      this.deleteSong(music);\n    }\n  }\n\n  deleteSong = async (music) => {\n    await favoriteSogsAPI.removeSong(music);\n    this.setState({ loading: false });\n  }\n\n  saveSong = async (music) => {\n    await favoriteSogsAPI.addSong(music);\n    const newList = await favoriteSogsAPI.getFavoriteSongs();\n    this.setState({ favorites: newList }, () => {\n      this.setState({ loading: false });\n    });\n  }\n\n  render() {\n    const { musics, artist, album, image, loading, favorites } = this.state;\n    return (\n      <div className=\"page-album\" data-testid=\"page-album\">\n        <Header />\n        <section className=\"flex-container-h album\">\n          <section className=\"album-sect\">\n            <img className=\"album-img\" src={ image } alt={ `${album} - ${artist}` } />\n            <h3 className=\"album-title\" data-testid=\"album-name\">{ album }</h3>\n            <p className=\"album-singer\" data-testid=\"artist-name\">{ artist }</p>\n          </section>\n          {loading ? <Loading /> : (\n            <section className=\"tracks-sect\">\n              {musics.map((music, index) => {\n                if (index !== 0) {\n                  return (\n                    <section className=\"track\" key={ music.trackId }>\n                      <MusicCard\n                        music={ music }\n                      />\n                      <label className=\"label\" htmlFor={ `favorite-${music.trackId}` }>\n                        <input\n                          className=\"checkbox\"\n                          id={ `favorite-${music.trackId}` }\n                          type=\"checkbox\"\n                          name=\"favorite\"\n                          data-testid={ `checkbox-music-${music.trackId}` }\n                          onChange={ (e) => this.handleCheckboxChange(e, music) }\n                          checked={ favorites\n                            .some(({ trackName }) => music.trackName === trackName) }\n                        />\n                        Favorita\n                      </label>\n                    </section>\n                  );\n                }\n                return false;\n              })}\n            </section>\n          )}\n        </section>\n      </div>\n    );\n  }\n}\n\nAlbum.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }).isRequired,\n};\n\nexport default Album;\n","import React from 'react';\nimport Header from '../components/Header';\nimport MusicCard from '../components/MusicCard';\nimport Loading from '../components/Loading';\n\nconst favoriteSogsAPI = require('../services/favoriteSongsAPI');\n\nclass Favorites extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      favorites: [],\n      mounted: false,\n      loading: true,\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ mounted: true }, () => this.getStorage());\n  }\n\n  componentWillUnmount() {\n    this.setState({ mounted: false });\n  }\n\n  handleCheckboxChange = async ({ target }, music) => {\n    this.setState({ loading: true });\n    const { favorites } = this.state;\n    if (!target.checked) {\n      const newList = favorites.filter(({ trackId }) => trackId !== music.trackId);\n      await favoriteSogsAPI.removeSong(music);\n      this.setState({ favorites: newList, loading: false });\n    }\n  }\n\n  getStorage = async () => {\n    const { mounted } = this.state;\n    if (mounted) {\n      const favorites = await favoriteSogsAPI.getFavoriteSongs();\n      this.setState({ favorites, loading: false });\n    }\n  }\n\n  render() {\n    const { favorites, loading } = this.state;\n    return (\n      <div className=\"favorites\" data-testid=\"page-favorites\">\n        <Header />\n        {loading ? <Loading /> : (\n          <section className=\"tracks-sect-fave\">\n            {favorites.map((music) => (\n              <section className=\"track\" key={ music.trackId }>\n                <MusicCard\n                  music={ music }\n                />\n                <label className=\"label\" htmlFor={ `favorite-${music.trackId}` }>\n                  <input\n                    className=\"checkbox\"\n                    id={ `favorite-${music.trackId}` }\n                    type=\"checkbox\"\n                    name=\"favorite\"\n                    data-testid={ `checkbox-music-${music.trackId}` }\n                    onChange={ (e) => this.handleCheckboxChange(e, music) }\n                    checked={ favorites\n                      .some(({ trackName }) => music.trackName === trackName) }\n                  />\n                  Favorita\n                </label>\n              </section>\n            ))}\n          </section>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Favorites;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Loading from '../components/Loading';\nimport '../styles/Profile.css';\n\nconst userAPI = require('../services/userAPI');\n\nclass Profile extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      mounted: false,\n      loading: true,\n      user: {},\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ mounted: true }, () => this.fetchUser());\n  }\n\n  componentWillUnmount() {\n    this.setState({ mounted: false });\n  }\n\n  fetchUser = async () => {\n    const { mounted } = this.state;\n    if (mounted) {\n      const user = await userAPI.getUser();\n      this.setState({ user, loading: false });\n    }\n  }\n\n  render() {\n    const { user, loading } = this.state;\n    return (\n      <div className=\"page-profile\" data-testid=\"page-profile\">\n        <Header />\n        {loading ? <Loading /> : (\n          <section className=\"profile-sect\">\n            <section className=\"flex-container-h flex-img-sect\">\n              <section className=\"img-sect\">\n                <img\n                  className=\"profile-image\"\n                  data-testid=\"profile-image\"\n                  src={ user.image }\n                  alt={ user.name }\n                />\n              </section>\n              <Link className=\"link-edit\" to=\"/profile/edit\">Editar perfil</Link>\n            </section>\n            <section className=\"flex-container-h flex-profile\">\n              <h3 className=\"profile-title\">Nome: </h3>\n              <p className=\"profile-content\">{user.name}</p>\n            </section>\n            <section className=\"flex-container-h  flex-profile\">\n              <h3 className=\"profile-title\">Email: </h3>\n              <p className=\"profile-content\">{ user.email }</p>\n            </section>\n            <h3 className=\"profile-title\">Descrição: </h3>\n            <p className=\"profile-content\">{user.description}</p>\n          </section>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Profile;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Loading from '../components/Loading';\n\nconst userAPI = require('../services/userAPI');\n\nclass ProfileEdit extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      mounted: false,\n      loading: true,\n      user: {},\n      disable: true,\n      saved: false,\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ mounted: true }, () => this.fetchUser());\n  }\n\n  componentWillUnmount() {\n    this.setState({ mounted: false });\n  }\n\n  fetchUser = async () => {\n    const { mounted } = this.state;\n    if (mounted) {\n      const user = await userAPI.getUser();\n      this.setState({ user, loading: false }, () => this.verifyForm());\n    }\n  }\n\n  handleChange = ({ target: { name, value } }) => {\n    this.setState((prevSt) => ({\n      ...prevSt,\n      user: {\n        ...prevSt.user,\n        [name]: value,\n      },\n    }), () => this.verifyForm());\n  }\n\n  verifyForm = () => {\n    const { user: { name, email, description, image } } = this.state;\n    let disable = true;\n    const validateArr = [name, email, description, image];\n    const isEmpty = validateArr.some((item) => item === '');\n    const isEmailValid = this.checkEmail(email);\n    if (!isEmpty && isEmailValid) disable = false;\n    this.setState({ disable });\n  }\n\n  handleClick = async (e) => {\n    e.preventDefault();\n    const { mounted } = this.state;\n    if (mounted) {\n      this.setState({ loading: true });\n      const { user } = this.state;\n      await userAPI.updateUser(user);\n      this.setState({ saved: true, loading: false });\n    }\n  }\n\n  checkEmail = (value) => {\n    const isValid = value.match(/[\\w.!#$%&'*+=?^_`{|}~-]+@[\\w.-]+\\.[A-Z]{2,}/gi);\n    return isValid;\n  }\n\n  render() {\n    const { loading, user, disable, saved } = this.state;\n    const { name, email, image, description } = user;\n    return (\n      <div className=\"profile-edit\" data-testid=\"page-profile-edit\">\n        <Header />\n        {loading ? <Loading /> : (\n          <form className=\"flex-container-v\">\n            <input\n              className=\"input\"\n              type=\"text\"\n              placeholder=\"Nome\"\n              name=\"name\"\n              value={ name }\n              onChange={ this.handleChange }\n              data-testid=\"edit-input-name\"\n            />\n            <input\n              className=\"input\"\n              type=\"email\"\n              name=\"email\"\n              value={ email }\n              placeholder=\"E-mail\"\n              onChange={ this.handleChange }\n              data-testid=\"edit-input-email\"\n            />\n            <textarea\n              className=\"textarea\"\n              placeholder=\"Descrição\"\n              name=\"description\"\n              value={ description }\n              onChange={ this.handleChange }\n              data-testid=\"edit-input-description\"\n            />\n            <input\n              className=\"input\"\n              type=\"text\"\n              name=\"image\"\n              placeholder=\"Foto\"\n              value={ image }\n              onChange={ this.handleChange }\n              data-testid=\"edit-input-image\"\n            />\n            <button\n              className=\"button\"\n              type=\"button\"\n              data-testid=\"edit-button-save\"\n              onClick={ this.handleClick }\n              disabled={ disable }\n            >\n              Salvar\n            </button>\n          </form>\n        )}\n        {saved && <Redirect to=\"/profile\" />}\n      </div>\n    );\n  }\n}\n\nexport default ProfileEdit;\n","import React from 'react';\nimport Header from '../components/Header';\nimport '../styles/NotFound.css';\n\nclass NotFound extends React.Component {\n  render() {\n    return (\n      <div data-testid=\"page-not-found\">\n        <Header />\n        <section className=\"page-not-found\">\n          <img className=\"notFound\" src=\"https://www.pngitem.com/pimgs/m/116-1163025_music-icon-png-free-download-desenho-de-notas.png\" alt=\"Music symbol\" />\n          <p className=\"not-found-p\">Page not found (404)</p>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default NotFound;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Login from './pages/Login';\nimport Search from './pages/Search';\nimport Album from './pages/Album';\nimport Favorites from './pages/Favorites';\nimport Profile from './pages/Profile';\nimport ProfileEdit from './pages/ProfileEdit';\nimport NotFound from './pages/NotFound';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <section>\n        <BrowserRouter>\n          <Switch>\n            <Route path=\"/project-trybe-tunes/profile/edit\" component={ ProfileEdit } />\n            <Route path=\"/project-trybe-tunes/profile\" component={ Profile } />\n            <Route path=\"/project-trybe-tunes/favorites\" component={ Favorites } />\n            <Route path=\"/project-trybe-tunes/album/:id\" component={ Album } />\n            <Route path=\"/project-trybe-tunes/search\" component={ Search } />\n            <Route exact path=\"/project-trybe-tunes/\" component={ Login } />\n            <Route path=\"/project-trybe-tunes/*\" component={ NotFound } />\n          </Switch>\n        </BrowserRouter>\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}